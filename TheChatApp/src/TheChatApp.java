
import java.io.IOException;
import java.net.InetAddress;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.security.NoSuchAlgorithmException;
import java.security.PrivateKey;
import java.util.logging.Level;
import java.util.logging.Logger;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author ssmis
 */
public class TheChatApp extends javax.swing.JFrame {

    /**
     * Creates new form Frame
     */
    
    
    public TheChatApp() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jProgressBar1 = new javax.swing.JProgressBar();
        Exception1 = new javax.swing.JDialog();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        uname = new javax.swing.JTextField();
        targetIP = new javax.swing.JTextField();
        createUser = new javax.swing.JButton();
        genKeys = new javax.swing.JButton();
        isMiner = new javax.swing.JRadioButton();
        sendThisMsg = new javax.swing.JTextField();
        sendMessage = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        sentText = new javax.swing.JTextArea();
        printBC = new javax.swing.JButton();
        showMessages = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        receivedMsgs = new javax.swing.JTextArea();
        diff = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();

        jLabel5.setText("Unknown Host Exception!");

        javax.swing.GroupLayout Exception1Layout = new javax.swing.GroupLayout(Exception1.getContentPane());
        Exception1.getContentPane().setLayout(Exception1Layout);
        Exception1Layout.setHorizontalGroup(
            Exception1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Exception1Layout.createSequentialGroup()
                .addContainerGap(138, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addGap(119, 119, 119))
        );
        Exception1Layout.setVerticalGroup(
            Exception1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Exception1Layout.createSequentialGroup()
                .addGap(126, 126, 126)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(140, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("UserName:");

        jLabel2.setText("TargetIP:");

        uname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unameActionPerformed(evt);
            }
        });

        createUser.setText("Create User");
        createUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createUserActionPerformed(evt);
            }
        });

        genKeys.setText("Generate Key!");
        genKeys.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                genKeysActionPerformed(evt);
            }
        });

        isMiner.setText("Miner Mode");
        isMiner.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                isMinerActionPerformed(evt);
            }
        });

        sendThisMsg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendThisMsgActionPerformed(evt);
            }
        });

        sendMessage.setText("Send!");
        sendMessage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendMessageActionPerformed(evt);
            }
        });

        sentText.setColumns(20);
        sentText.setRows(5);
        jScrollPane1.setViewportView(sentText);

        printBC.setText("Print BlockChain");
        printBC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printBCActionPerformed(evt);
            }
        });

        showMessages.setText("View All Messages");
        showMessages.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showMessagesActionPerformed(evt);
            }
        });

        jLabel3.setText("Received Messages:");

        jLabel4.setText("Sent Messages:");

        receivedMsgs.setColumns(20);
        receivedMsgs.setRows(5);
        jScrollPane3.setViewportView(receivedMsgs);

        diff.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5" }));
        diff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                diffActionPerformed(evt);
            }
        });

        jLabel6.setText("Miner Difficulty:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(uname, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(isMiner)
                    .addComponent(sendMessage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(targetIP, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(sendThisMsg)
                    .addComponent(showMessages, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(printBC, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(createUser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(genKeys, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(diff, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(147, 147, 147)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(uname, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(targetIP, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(isMiner)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(diff))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(createUser, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(genKeys, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sendThisMsg, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sendMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(showMessages, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(printBC, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(39, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void unameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_unameActionPerformed

    private void createUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createUserActionPerformed
        sentText.setEditable(false);
        try {
            if(!isMiner.isSelected()){
                currUser=new MyUser(uname.getText(),InetAddress.getLocalHost().getHostAddress(),targetIP.getText());
            }
            else{
                currUser= new Miner(uname.getText(), InetAddress.getLocalHost().getHostAddress(),targetIP.getText());
            }
            createUser.setEnabled(false);
            isMiner.setEnabled(false);
            diff.setEnabled(false);
            targetIP.setEnabled(false);
            uname.setEnabled(false);
            isMiner.setEnabled(false);
        } catch (Exception e) {
            Logger.getLogger(TheChatApp.class.getName()).log(Level.SEVERE, null, e);
            System.out.println("Error!");
            System.exit(0);
        } 
    }//GEN-LAST:event_createUserActionPerformed

    private void sendThisMsgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendThisMsgActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_sendThisMsgActionPerformed

    private void sendMessageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendMessageActionPerformed
        try {
            // TODO add your handling code here:
            currUser.send(sendThisMsg.getText());
            String temp=sentText.getText();
            allText=allText+"\n"+"to----->"+currUser.otherUser.userName+"   :   "+sendThisMsg.getText();
            sendThisMsg.setText("");
        } catch (Exception ex) {
            Logger.getLogger(TheChatApp.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("Error!");
            System.exit(0);
        }
        
    }//GEN-LAST:event_sendMessageActionPerformed

    private void isMinerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_isMinerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_isMinerActionPerformed

    private void genKeysActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_genKeysActionPerformed
        currUser.sendMyKeys(targetIP.getText());
        genKeys.setEnabled(false);
        targetIP.setEnabled(false);
        chatArea cA=new chatArea();
        cA.chatBox.setEditable(false);
        cA.setVisible(true);
        currUser.isUp=true; 
        currUser.KeyTransfer=true;
        currUser.startThread();
    }//GEN-LAST:event_genKeysActionPerformed

    private void printBCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printBCActionPerformed
        // TODO add your handling code here:
        printBlockChain(currUser);
    }//GEN-LAST:event_printBCActionPerformed

    private void showMessagesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showMessagesActionPerformed
        try {
            String str=getUsers(currUser);
            receivedMsgs.setText(str);
            sentText.setText(allText);
        } catch (Exception ex) {
            Logger.getLogger(TheChatApp.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_showMessagesActionPerformed

    private void diffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_diffActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_diffActionPerformed

    /**
     * @param args the command line arguments
     */

    public static void main(String args[]) throws UnknownHostException {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TheChatApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TheChatApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TheChatApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TheChatApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        //InetAddress ia=InetAddress.getByName("localhost");
        //System.out.println(InetAddress.getLocalHost().getHostAddress());

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TheChatApp().setVisible(true);
                sentText.setEditable(false);
                receivedMsgs.setEditable(false);
            }
        });
    }
    
    void printBlockChain(MyUser u){
        System.out.println("****************************");
        System.out.println("*********BLOCKCHAIN*********");
        System.out.println("****************************");
        for(int i=0;i<u.blockChain.size();i++){
            Block b=u.blockChain.get(i);
            System.out.println("---------Block "+i+"-----------");
            System.out.println(b);
            System.out.println("---------------------------");
        }
    }
    
    String getUsers(MyUser u) throws Exception{
        String finalText="";
        for(int i=0;i<u.blockChain.size();i++){
            Block b=u.blockChain.get(i);
            if(b.message.receiver.equals(u.userName)){
                String str=u.decrypt(u.privateKey,b.message.cipher);
                finalText=finalText+"from-----> "+b.message.sender+"   :   "+str+"\n";
            }
        }
        return finalText;
    }
    static MyUser currUser;
    String allText="";
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog Exception1;
    private javax.swing.JButton createUser;
    public static javax.swing.JComboBox<String> diff;
    private javax.swing.JButton genKeys;
    private javax.swing.JRadioButton isMiner;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton printBC;
    public static javax.swing.JTextArea receivedMsgs;
    private javax.swing.JButton sendMessage;
    private javax.swing.JTextField sendThisMsg;
    public static javax.swing.JTextArea sentText;
    private javax.swing.JButton showMessages;
    private javax.swing.JTextField targetIP;
    private javax.swing.JTextField uname;
    // End of variables declaration//GEN-END:variables

}
